BasicUpstart2(startup)
#import "../c64lib/c64lib.asm"
#import "data.asm"

startup:
	enter_startup()
	setup_irq($00, irq1)
	leave_startup()

main:
	lda C64__SCREEN_CTRL2
	ora #%00010000 // multicolor
	sta C64__SCREEN_CTRL2


	.const COLR_VIC_BG0 = 0
	.const COLR_VIC_BG1 = 14
	.const COLR_VIC_BG2 = 6
	lda #COLR_VIC_BG0
	sta $d021
	lda #COLR_VIC_BG1
	sta $d022
	lda #COLR_VIC_BG2
	sta $d023



	lda C64__MEM_SETUP
	and #%11110001
	ora #%00001010 // $2800-$2fff
	sta C64__MEM_SETUP


	.const CHAR_BEAM_L = $0f
	.const CHAR_BEAM_R = $10
	.const CHAT_BOX_UL = $77
	.const CHAT_BOX_UC = $78
	.const CHAT_BOX_UR = $79
	.const CHAT_BOX_ML = $71
	.const CHAT_BOX_MC = $72
	.const CHAT_BOX_MR = $73
	.const CHAT_BOX_BL = $74
	.const CHAT_BOX_BC = $75
	.const CHAT_BOX_BR = $76

    ldx #$00
!:
.for (var i = 0; i < 4; i++) {
	lda _screen + $0100*i,x
    sta C64__SCREEN_DATA + $0100*i, x
    tay
    lda $3000,y // char color
    and #$0f
    sta C64__SCREEN_COLOR + $0100*i,x	
}

	inx    
    bne !-

main_loop:
	wait_vblank()
/*
	dec C64__SCREEN_CTRL2
	lda C64__SCREEN_CTRL2
	and #$07
	cmp #$00
	bne main_loop

	lda #$07
	ora C64__SCREEN_CTRL2
	sta C64__SCREEN_CTRL2
*/
	lda _x
	cmp #$00
	bne main_loop

hard:
	lda C64__SCREEN_DATA + $0000
	pha
	ldx #$00
!:
	lda C64__SCREEN_DATA + $0001, x
	sta C64__SCREEN_DATA + $0000, x
	inx
	cpx #$27
	bne !-
	pla
	sta C64__SCREEN_DATA + $0027
	jmp main_loop



_x: .byte $00

irq1:
	enter_irq()
	setup_irq($3a, irq2)

	//count_vblank()

    lda _x
    cmp #$00
    beq !+
    dec _x
    jmp !++
!:
	lda #$07
	sta _x
!:
	scroll_screen_x_a8(_x)
	leave_irq()
	rti

irq2:
	enter_irq()
	setup_irq($00, irq1)
	scroll_screen_x_i8($00)
    leave_irq()
	rti

_screen:
	.byte $0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$77,$78,$79,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$74,$75,$76,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$77,$78,$79,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$71,$72,$73,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$74,$75,$76,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	.byte $0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10,$0f,$10


